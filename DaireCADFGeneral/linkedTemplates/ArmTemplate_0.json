{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DaireCADFGeneral"
		},
		"ADLSampleData_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSampleData'"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"DaireDataLakeStorageAccount_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DaireDataLakeStorageAccount'"
		},
		"DataFlowDemoBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataFlowDemoBlobStorage'"
		},
		"Xero1_connectionProperties_consumerKey": {
			"type": "secureString",
			"metadata": "Secure string for 'consumerKey' of 'Xero1'"
		},
		"Xero1_connectionProperties_privateKey": {
			"type": "secureString",
			"metadata": "Secure string for 'privateKey' of 'Xero1'"
		},
		"DaireSHIRFolder_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DaireSHIRFolder'"
		},
		"ADLSampleData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dairedatalake.dfs.core.windows.net"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlmlbootcamprg.dfs.core.windows.net"
		},
		"DaireDataLakeStorageAccount_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dairedatalake.dfs.core.windows.net"
		},
		"DaireSHIRFolder_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\ADF SHIR Test\\In"
		},
		"DaireSHIRFolder_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "SPT\\DAireCunningham"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Fail Pipeline Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FailOnPurpose",
						"type": "Fail",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"message": "Pipeline Fail",
							"errorCode": "123456Feature"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-16T11:51:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSampleData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSampleData_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSampleData_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DaireDataLakeStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DaireDataLakeStorageAccount_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DaireDataLakeStorageAccount_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowDemoBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DataFlowDemoBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xero1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Xero",
				"typeProperties": {
					"connectionProperties": {
						"host": "asc",
						"authenticationType": "OAuth_1.0",
						"consumerKey": {
							"type": "SecureString",
							"value": "[parameters('Xero1_connectionProperties_consumerKey')]"
						},
						"privateKey": {
							"type": "SecureString",
							"value": "[parameters('Xero1_connectionProperties_privateKey')]"
						},
						"useEncryptedEndpoints": true,
						"useHostVerification": true,
						"usePeerVerification": true
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DaireSelfHostedintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "North Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLiveInMinutes": 60
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BikeData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Chicago Divvy Bicycle.csv",
						"folderPath": "chicago-bike-data",
						"fileSystem": "adf-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "trip_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "week",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "hour",
						"type": "String"
					},
					{
						"name": "usertype",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "starttime",
						"type": "String"
					},
					{
						"name": "stoptime",
						"type": "String"
					},
					{
						"name": "tripduration",
						"type": "String"
					},
					{
						"name": "temperature",
						"type": "String"
					},
					{
						"name": "events",
						"type": "String"
					},
					{
						"name": "from_station_id",
						"type": "String"
					},
					{
						"name": "from_station_name",
						"type": "String"
					},
					{
						"name": "latitude_start",
						"type": "String"
					},
					{
						"name": "longitude_start",
						"type": "String"
					},
					{
						"name": "dpcapacity_start",
						"type": "String"
					},
					{
						"name": "to_station_id",
						"type": "String"
					},
					{
						"name": "to_station_name",
						"type": "String"
					},
					{
						"name": "latitude_end",
						"type": "String"
					},
					{
						"name": "longitude_end",
						"type": "String"
					},
					{
						"name": "dpcapacity_end",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CADOutput1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFlowDemoBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFlowDemoBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyDatasetCAD1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFlowDemoBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Currency_CAD.txt",
						"container": "demo"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFlowDemoBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyDatasetUSD1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFlowDemoBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Currency_USD.txt",
						"container": "demo"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFlowDemoBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveDBCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSampleData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "moviesDB.csv",
						"folderPath": "MovieDB",
						"fileSystem": "demodata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSampleData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/USDOutput1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataFlowDemoBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataFlowDemoBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XMLFilesPresent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DaireDataLakeStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "refined",
						"fileSystem": "rte"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DaireDataLakeStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xml1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DaireDataLakeStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sample iNews File.xml",
						"fileSystem": "dairedatalake"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DaireDataLakeStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/iNewsDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DaireDataLakeStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "iNewsExtract.csv",
						"fileSystem": "dairedatalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FieldName",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DaireDataLakeStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/iNewsSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DaireDataLakeStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "new 1.xml",
						"fileSystem": "dairedatalake"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DaireDataLakeStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DaireSHIRFolder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('DaireSHIRFolder_properties_typeProperties_host')]",
					"userId": "[parameters('DaireSHIRFolder_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DaireSHIRFolder_password')]"
					}
				},
				"connectVia": {
					"referenceName": "DaireSelfHostedintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/DaireSelfHostedintegrationRuntime')]"
			]
		}
	]
}